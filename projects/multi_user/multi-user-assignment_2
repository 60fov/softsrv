basic client-side prediction for movement. 

server
	simulation
		client (from recv'd input)
		npcs (continuously moving)
			pos + velo

client
	simulation
		poll input
		simulate self + npcs

client player control
	send data to server
		input?
		new position data?

simulate correction
does the client need to send data about npcs? (p sure no)




next steps
client side first
	[x] input
	[*] separate tick/frame rate
	[ ] simulate
	[ ] interpolate
server
	[ ] player/connection IDs
		[ ] separate ping and connection logic
		[ ] connect and disconnect events
		[ ] client send id on connect
	[ ] move simulation (???)
	[ ] client side handling (???)
	
todo (side quests)
	[ ] pub sub
	[ ] threads for nonblocking window events
	[ ] simulate vs prediction function (???)

MTU (max transimssion unit)
	what is the number?
	does it vary between devices?
	could/should we have packets larger than?

threads
	non blocking window events
	separate tick(120)/frame(300)/poll(1000) rate


resources
Win32 Input - https://www.youtube.com/watch?v=ZjfdkDIIw2A


assignment

In this project you'll implement basic client-side prediction for movement. 

You should have a server with at least one client that connects. A client controls one character and sends messages to the server about its input so the server can update its position. It should also be able to predict its own motion. The server will also update a number of NPCs which should be continuously moving. It will tell the client about their position and velocity, but the client will also need to predict their movement so it appears smooth (does the client need to send any data about them to the server tho?)

You'll want to be able to simulate a correction from the server to the client. 